@model CookingCurator.EntityModels.ChangeAllergiesViewModel

@{
    ViewBag.Title = "Change Allergies";
    Layout = "~/Views/Shared/_Layout.cshtml";
    bool checkEmpty = Model.chosenAllergies.Any();
}

<h2>Change Allergies</h2>

<p>Choose allergies you have!</p>
<p>You can select multiple allergies.</p>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <dt>
        Your Allergies:
    </dt>

    <dd class="col">
        @if (checkEmpty)
        {
            <ul class="list-group" style="margin-top:10px">

                @foreach (var a in Model.chosenAllergies)
                {
                    <li class="list-group-item" style="background-color:#E8E8E8">@a.allergyName</li>
                }
            </ul>
        }
        else
        {
            <p>You have selected no allergies!</p>
        }

    </dd>
    <br />
    <dt>

    </dt>

    <div class="form-group">
        @Html.LabelFor(model => model.selectedAllergiesId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.ListBoxFor(model => model.selectedAllergiesId, new MultiSelectList(Model.allAllergies, "allergy_ID", "allergyName"), new { id = "multiSelect", multiple = "multiple" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Change Allergies" class="btn btn-default" style="margin-top:10px" />
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to User Dashboard", "UserDashboard")
</div>

@section Scripts {
    <script>
        $(function () {
            $("#multiSelect").chosen({
                width: "100%"
            });
        })
    </script>
}
