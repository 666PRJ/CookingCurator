@model CookingCurator.EntityModels.SearchViewModel

@{
    ViewBag.Title = "Search";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Search for Recipes</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>By Title or Ingredients</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.searchString, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.searchString, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.searchString, "", new { @class = "text-danger" })
        </div>
    </div>

    <p>Note: When searching by ingredients, use a comma (",") to seperate ingredients</p>

    <p>@ViewBag.NoText</p>

    @Html.DropDownListFor(m => m.searchSelection, Model.list)

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Search" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @if(Model.recipeList.Count() > 0)
    {
    <table class="table">
        <tr>
            <th>
                Title
            </th>
            <th>
                Rating
            </th>
            <th>
                Author
            </th>
            <th>
                Verified
            </th>
            <th>
                Country
            </th>
            <th>
                Matched Ingredients
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model.recipeList)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.rating)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.author)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.verified)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.country)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.matchedIngredients)
                </td>
                <td>
                    @Html.ActionLink("Details","Details", "Recipe", new { id = item.recipe_Id }, null)
                </td>
            </tr>
        }

    </table>
    }

</div>

<div>
    @Html.ActionLink("Back to Recipe List", "Index", "Recipe")
</div>
