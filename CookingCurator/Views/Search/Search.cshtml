@model CookingCurator.EntityModels.SearchViewModel

@{
    ViewBag.Title = "Search";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Search</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>SearchViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.searchString, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.searchString, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.searchString, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Search" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @if(Model.recipeList.Count() > 0)
    {
    <table class="table">

        @foreach (var item in Model.recipeList)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.rating)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.author)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.verified)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.country)
                </td>
                <td>
                    @Html.ActionLink("Details", "Details", new { id = item.recipe_Id })
                </td>
            </tr>
        }

    </table>
    }

</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
