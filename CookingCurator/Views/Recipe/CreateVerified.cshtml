@model CookingCurator.EntityModels.RecipeVerifiedAddViewModel

@{
    ViewBag.Title = "Create Verified Recipe";
}

<h2>Create Verified Recipe</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>RecipeVerifiedAddViewModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.instructions, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.instructions, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.instructions, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.author, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.author, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.author, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.source_Link, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.source_Link, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.source_Link, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.country, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.country, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.country, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.mealTimeType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.mealTimeType, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.mealTimeType, "", new { @class = "text-danger" })
        </div>
    </div>

    <table class="table">
        <tr><th></th><th>Ingred</th></tr>
        @foreach (var item in Model.ingredList)
        {
            <tr>
                <td><input type="checkbox" name="ingredListIds" value="@item.Value" checked="@item.Selected" /></td>
                <td>@item.Text</td>
            </tr>
        }
    </table>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}