@model CookingCurator.EntityModels.Recipe_IngredViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@Html.DisplayFor(model => model.title)</h2>


@using (Html.BeginForm("Edit", "Recipe", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Edit Recipe Details</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.rating, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.rating, new { htmlAttributes = new { @class = "form-control", @readOnly = "readOnly" } })
            @Html.ValidationMessageFor(model => model.rating, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.instructions, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.instructions, new { htmlAttributes = new { @class = "form-control col-md-10" } })

            @Html.ValidationMessageFor(model => model.instructions, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.lastUpdated, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.lastUpdated, new { htmlAttributes = new { @class = "form-control", @readOnly = "readOnly" } })
            @Html.ValidationMessageFor(model => model.lastUpdated, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.author, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.author, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.author, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.source_ID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.source_ID, new { htmlAttributes = new { @class = "form-control", @readOnly = "readOnly" } })
            @Html.ValidationMessageFor(model => model.source_ID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.source_Link, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.source_Link, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.source_Link, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.country, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.country, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.country, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.mealTimeType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.mealTimeType, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.mealTimeType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.selectedIngredsId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.ListBoxFor(model => model.selectedIngredsId, new MultiSelectList(Model.ingredients, "ingred_ID", "ingred_Name"), new { id = "multiSelect", multiple = "multiple" })
        </div>

    </div>

    @if(!String.IsNullOrEmpty(@Model.fileResult)){
    <div class="form-group">
        @Html.Label("Recipe Image", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10" id="divImg" style="height:200px;width:200px;">
            <img src="@Model.fileResult" style="height:200px" alt="Recipe Image" />
        </div>
    </div>
    }

    <div class="form-group">
        @Html.Label("Alter Image", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" id="file" name="file" style="margin-bottom:5px"/>
            <span style="color:#989898">Note: Image size should be less than 50kb.</span>
        </div>
    </div>

    @Html.HiddenFor(model => model.recipe_Id)

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to Recipe List", "Index")
</div>

@section Scripts {
    <script>
        $(function () {
            $("#multiSelect").chosen({
                width: "100%"
            });
        })
    </script>
}
